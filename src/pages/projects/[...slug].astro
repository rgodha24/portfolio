---
import { getCollection } from "astro:content";
import Project from "../../components/Project.astro";
import Github from "../../icons/Github.astro";
import Icon from "../../icons/Icon.astro";
import Link from "../../icons/Link.astro";
import CombinedLayout from "../../layouts/CombinedLayout.astro";

export async function getStaticPaths() {
   const projects = await getCollection("projects");
   return projects.map((project) => ({
      params: { slug: project.slug },
      props: project,
   }));
}
type Props = Awaited<ReturnType<typeof getStaticPaths>>[number]["props"];

const props = Astro.props;
const { Content } = await props.render();

export const prerender = true;
---

<CombinedLayout title={`projects: ${props.data.title}`} description={props.data.blurb}>
   <div
      class="border-1 rounded-4 gradient from-coolgray-900 to-coolgray-800 m-4 border border-sky-300 p-5 hover:from-slate-900 hover:to-slate-800"
   >
      <Content />
      <div class="gap-35 flex flex-row justify-center">
         <Icon href={props.data.website} title={props.data.title + " website link"} stroke>
            <Link />
         </Icon>
         <Icon href={props.data.repo} title={props.data.title + "github repo"}>
            <Github />
         </Icon>
      </div>
   </div>
</CombinedLayout>

<style>
   .gradient {
      --un-gradient-stops: var(--un-gradient-from), var(--un-gradient-to);
      --un-gradient: var(--un-gradient-shape), var(--un-gradient-stops);
      background: linear-gradient(var(--un-gradient));
      background-size: 400% 400%;
   }
   .gradient:hover {
      animation: gradient-animation 3s ease infinite;
   }

   @keyframes gradient-animation {
      0% {
         background-position: 0% 50%;
      }
      50% {
         background-position: 100% 50%;
      }
      100% {
         background-position: 0% 50%;
      }
   }
</style>
